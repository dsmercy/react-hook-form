name: CI/CD

on:
  push:
    branches:
      - master
env:
  APPLICATION_NAME: react-hook-form
  IMAGE: dsmercy/react-hook-form
  TAG: 1.0.${{ github.run_number }}
  DOCKERFILE_PATH: ""
  NAMESPACE: development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

  deploy-secrets:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Deploy secrets to Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ env.NAMESPACE }}
        env:
          MY_CONNECTION_STRING: ${{ secrets.MY_CONNECTION_STRING }}

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      - uses: actions/checkout@v2
      - name: debug
        run: |
          echo "ls ./"
          ls ./
          echo "ls ../"
          ls ../
          echo "ls ../react-hook-form"
          ls ../react-hook-form
          - name: Set up Kubectl
      - uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
  
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.0.0
  
      # - name: Deploy to Kubernetes
      #   uses: azure/k8s-deploy@v1
      #   with:
      #     namespace: ${{ env.NAMESPACE }}
      #     manifests: './deploy/react-hook-form/.'
      #     images: |
      #       docker.io/${{ env.IMAGE }}:${{ env.TAG }}
      #     # imagepullsecrets: <image-pull-secret> # Name of the image pull secret
      #     helm-version: v3
      #     helm-chart: './deploy/react-hook-form' # Path to the Helm chart
      #     helm-release-name: ${{ env.APPLICATION_NAME }} # Helm release name
      #     helm-set: image.repository=docker.io/${{ env.IMAGE }},image.tag=${{ env.TAG }}
      # - name: Set up Helm
      #   uses: azure/setup-helm@v1
      #   with:
      #     version: v3.0.0

      - name: Deploy to Kubernetes
        run: |
          echo "Namespace ${{NAMESPACE}}"
          helm upgrade --install react-hook-form ./deploy/react-hook-form/. --namespace "${{NAMESPACE}}"
            --set image.repository=${{ env.IMAGE }}
            --set image.tag=${{ env.TAG }}
            --set namespace=${{NAMESPACE}}
