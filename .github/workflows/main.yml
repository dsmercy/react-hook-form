name: CI/CD

on:
  push:
    branches:
      - master
env:
  APPLICATION_NAME: react-hook-form
  IMAGE: dsmercy/react-hook-form
  TAG: 1.0.${{ github.run_number }}
  DOCKERFILE_PATH: ""
  NAMESPACE: development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

  deploy-secrets:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Deploy secrets to Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ env.NAMESPACE }}
        env:
          MY_CONNECTION_STRING: ${{ secrets.MY_CONNECTION_STRING }}
        # echo "populate $APPLICATION_NAME-secrets secrets in k8s"
        # kubectl --namespace "${NAMESPACE}" create secret generic ${{ env.APPLICATION_NAME }}-secrets --from-literal=my_connection_string="$MY_CONNECTION_STRING" --dry-run=client -o yaml | kubectl apply -f -

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      # - name: Set up kubeconfig
        # run: |
        #   echo "${{ secrets.KUBECONFIG }}" | base64 --decode > /tmp/kubeconfig.yaml
        #   echo "KUBECONFIG=/tmp/kubeconfig.yaml" >> $GITHUB_ENV
      # - name: Deploy application to Kubernetes
      #   uses: azure/k8s-deploy@v1
      #   with:
      #     # kubeconfig: ${{ secrets.KUBECONFIG }}
      #     namespace: ${{ env.NAMESPACE }}
      #     manifests: ./deploy/react-hook-form/.
      #     images: |
      #       ${{ env.IMAGE }}:1.0.${{ github.run_number }}
      #     imagePullSecrets: |
      #       ${{ env.APPLICATION_NAME }}-secrets
      - name: Deploy to Kubernetes
        run: |
          # kubectl config use-context $KUBECONFIG
          helm upgrade --install ${{ env.APPLICATION_NAME }} ./deploy/react-hook-form/. --namespace ${{ env.NAMESPACE }} \
            --set image.repository=${{ env.IMAGE }} \
            --set image.tag=${{ env.TAG }} \
            --set namespace=development
