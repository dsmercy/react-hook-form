name: CI/CD

on:
  push:
    branches:
      - master
env:
  APPLICATION_NAME: react-hook-form
  IMAGE: dsmercy/react-hook-form
  TAG: 1.0.${{ github.run_number }}
  DOCKERFILE_PATH: ""
  NAMESPACE: development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

  deploy-secrets:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes cluster context
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ env.NAMESPACE }}

      - name: Deploy secrets to Kubernetes
        run: |
          kubectl --namespace ${{ env.NAMESPACE }} create secret generic ${{ env.APPLICATION_NAME }}-secrets --from-literal=my_connection_string=${{ secrets.MY_CONNECTION_STRING }} --dry-run=client -o yaml | kubectl apply -f -

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up Kubernetes cluster context
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ env.NAMESPACE }}
  
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.0.0

      - name: Deploy to Kubernetes
        run: |
          kubectl config current-context
          helm upgrade --install react-hook-form ./deploy/react-hook-form/. \
            --namespace ${{ env.NAMESPACE }} \
            --set image.repository=${{ env.IMAGE }} \
            --set image.tag=${{ env.TAG }} \
            --set namespace=${{ env.NAMESPACE }}
